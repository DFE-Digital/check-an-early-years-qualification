@using System.Globalization
@model Dfe.EarlyYearsQualification.Web.Models.Content.QualificationDetailsModel

@{
    ViewData["Title"] = "Qualification Details";
}

@section Scripts
{
    <script src="~/js/pages/qualification-details-page.js" asp-append-version="true"></script>
}

@section BeforeMainContent {
    @{
        await Html.RenderPartialAsync("Partials/BackButton", Model.BackButton);
    }
}

@if (Model.Content!.FeedbackBanner is not null)
{
    await Html.RenderPartialAsync("Partials/FeedbackBanner", Model.Content.FeedbackBanner);
}

<div class="govuk-grid-row">
    <div id="qualification-details-summary" class="govuk-grid-column-full govuk-grid-column-two-thirds-from-desktop">
        <h1 class="govuk-heading-xl" id="page-header">@Model.Content!.MainHeader</h1>
        <div class="govuk-!-static-margin-bottom-7">
            <button id="print-button-top" class="govuk-link govuk-body-s print-button"
                    aria-label="Print page button">@Model.Content!.PrintButtonText</button>
        </div>
        <h2 class="govuk-heading-l"
            id="qualification-details-header">@Model.Content.QualificationDetailsSummaryHeader</h2>
        <dl class="govuk-summary-list">
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key" id="qualification-name-label">
                    @Model.Content.QualificationNameLabel
                </dt>
                <dd class="govuk-summary-list__value" id="qualification-name-value">
                    @Model.QualificationName
                </dd>
            </div>
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key" id="qualification-level-label">
                    @Model.Content.LevelLabel
                </dt>
                <dd class="govuk-summary-list__value" id="qualification-level-value">
                    @Model.QualificationLevel
                </dd>
            </div>
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key" id="awarding-organisation-label">
                    @Model.Content.AwardingOrgLabel
                </dt>
                <dd class="govuk-summary-list__value" id="awarding-organisation-value">
                    @Model.AwardingOrganisationTitle
                </dd>
            </div>
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key" id="date-started-date-label">
                    @Model.Content.QualificationStartDateLabel
                </dt>
                <dd class="govuk-summary-list__value" id="date-started-date-value">
                    @Model.DateStarted
                </dd>
            </div>
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key" id="date-awarded-date-label">
                    @Model.Content.QualificationAwardedDateLabel
                </dt>
                <dd class="govuk-summary-list__value" id="date-awarded-date-value">
                    @Model.DateAwarded
                </dd>
            </div>

            @if (Model.AdditionalRequirementAnswers != null)
            {
                for (var count = 0; count < Model.AdditionalRequirementAnswers.Count; count++)
                {
                    <div class="govuk-summary-list__row">
                        <dt class="govuk-summary-list__key" id="additional-requirement-@count-label">
                            @Model.AdditionalRequirementAnswers[count].ConfirmationStatement
                        </dt>
                        <dd class="govuk-summary-list__value" id="additional-requirement-@count-value">
                            @CultureInfo.CurrentCulture.TextInfo.ToTitleCase(Model.AdditionalRequirementAnswers[count].Answer!.ToLower())
                        </dd>
                    </div>
                }
            }
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key" id="date-of-check-label">
                    @Model.Content.DateOfCheckLabel
                </dt>
                <dd class="govuk-summary-list__value" id="date-of-check-value">
                    @DateTime.UtcNow.ToString("dd MMMM yyyy")
                </dd>
            </div>
        </dl>
    </div>
    <div class="govuk-grid-column-full govuk-!-static-margin-top-6 dont-float">
        <div id="qualification-result" class="govuk-grid-column-two-thirds-from-desktop dont-float">
            @{ await Html.RenderPartialAsync("Partials/QualificationResult", Model.QualificationResultModel); }

            <h2 class="govuk-heading-l" id="ratio-heading">@Model.Content.RatiosHeading</h2>
            @if (!string.IsNullOrEmpty(Model.Content.RatiosText))
            {
                @Html.Raw(Model.Content.RatiosText)
            }

            @if (!string.IsNullOrEmpty(Model.Content.RatiosAdditionalInfoText))
            {
                <div id="ratio-additional-info">
                    @Html.Raw(Model.Content.RatiosAdditionalInfoText)
                </div>
            }

            @foreach (var row in Model.OrderRatioRows())
            {
                await Html.RenderPartialAsync("Partials/RatioRow", row);
            }
            
            <h2 class="govuk-heading-l govuk-!-static-margin-top-9"
                id="requirements-heading">@Model.Content!.RequirementsHeading</h2>

            @Html.Raw(Model.Content!.RequirementsText)

            <div class="govuk-!-static-margin-top-6 print-button-container">
                @if (!string.IsNullOrEmpty(Model.Content.PrintInformationHeading) && !string.IsNullOrEmpty(Model.Content.PrintInformationBody))
                {
                    await Html.RenderPartialAsync("Partials/AdditionalInformation", new AdditionalInformationModel
                                                                                    {
                                                                                        AdditionalInformationHeader = Model.Content.PrintInformationHeading,
                                                                                        AdditionalInformationBody = Model.Content.PrintInformationBody
                                                                                    });
                }
                <button id="print-button-bottom" class="govuk-link govuk-body-s print-button"
                        aria-label="Print page button">@Model.Content!.PrintButtonText</button>
            </div>

            <p class="govuk-body govuk-!-static-margin-top-6 govuk-!-margin-bottom-9">
                <a id="check-another-qualification-link" href="@Model.Content.CheckAnotherQualificationLink?.Href"
                   class="govuk-button govuk-button--secondary">@Model.Content.CheckAnotherQualificationLink?.DisplayText</a>
            </p>

            @if (Model.Content.FeedbackBanner is not null)
            {
                await Html.RenderPartialAsync("Partials/FeedbackBanner", Model.Content.FeedbackBanner);
            }
        </div>
    </div>

    @if (Model.UpDownFeedback is not null)
    {
        await Html.RenderPartialAsync("Partials/UpDownFeedback", Model.UpDownFeedback);
    }
</div>
