@model Dfe.EarlyYearsQualification.Web.Models.Content.QualificationDetailsModel

@{
    ViewData["Title"] = $"Qualification Details - {Model.QualificationId}";
}

@section BeforeMainContent {
    @{
        await Html.RenderPartialAsync("Partials/BackButton", Model.BackButton);
    }
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-full govuk-grid-column-two-thirds-from-desktop">
        <span class="govuk-caption-xl gem-c-title__context">
            @Model.Content!.MainHeader
        </span>
        <h1 class="govuk-heading-xl" id="qualification-name-value">@Model.QualificationName</h1>
        <dl class="govuk-summary-list">
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key">
                    @Model.Content.AwardingOrgLabel
                </dt>
                <dd class="govuk-summary-list__value" id="awarding-qualification-value">
                    @Model.AwardingOrganisationTitle
                </dd>
            </div>
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key">
                    @Model.Content.LevelLabel
                </dt>
                <dd class="govuk-summary-list__value" id="qualification-level-value">
                    @Model.QualificationLevel
                </dd>
            </div>
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key">
                    @Model.Content.QualificationNumberLabel
                </dt>
                <dd class="govuk-summary-list__value" id="qualification-number-value">
                    @Model.QualificationNumber
                </dd>
            </div>
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key">
                    @Model.Content.DateAddedLabel
                </dt>
                <dd class="govuk-summary-list__value" id="from-which-year-value">
                    @Model.FromWhichYear
                </dd>
            </div>
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key">
                    @Model.Content.DateOfCheckLabel
                </dt>
                <dd class="govuk-summary-list__value">
                    @DateTime.UtcNow.ToString("dd MMMM yyyy")
                </dd>
            </div>
        </dl>
    </div>
    <div class="govuk-grid-column-full govuk-!-static-margin-top-6">
        <h1 class="govuk-heading-l">@Model.Content!.RatiosHeading</h1>
        @Html.Raw(@Model.Content!.RatiosText)
        <table class="govuk-table">
            <tbody class="govuk-table__body">
                @{
                    if (Model.RatioRequirements.ApprovedForLevel2 || Model.RatioRequirements.ApprovedForLevel3 || Model.RatioRequirements.ApprovedForUnqualified || Model.RatioRequirements.ApprovedForLevel6)
                    {
                        if (Model.RatioRequirements.ApprovedForLevel6)
                        {
                            await Html.RenderPartialAsync("Partials/RatioRow", new RatioRowModel
                                                                               {
                                                                                   LevelText = "Level 6",
                                                                                   IsAccepted = Model.RatioRequirements.ApprovedForLevel6
                                                                               });
                        }
                        
                        if (Model.RatioRequirements.ApprovedForLevel3)
                        {
                            await Html.RenderPartialAsync("Partials/RatioRow", new RatioRowModel
                                                                               {
                                                                                   LevelText = "Level 3",
                                                                                   IsAccepted = Model.RatioRequirements.ApprovedForLevel3
                                                                               });
                        }
                        
                        if (Model.RatioRequirements.ApprovedForLevel2)
                        {
                            await Html.RenderPartialAsync("Partials/RatioRow", new RatioRowModel
                                                                               {
                                                                                   LevelText = "Level 2",
                                                                                   IsAccepted = Model.RatioRequirements.ApprovedForLevel2
                                                                               });
                        }
                        
                        if (Model.RatioRequirements.ApprovedForUnqualified)
                        {
                            await Html.RenderPartialAsync("Partials/RatioRow", new RatioRowModel
                                                                               {
                                                                                   LevelText = "Unqualified",
                                                                                   IsAccepted = Model.RatioRequirements.ApprovedForUnqualified
                                                                               });
                        }
                    }
                    
                    if (!Model.RatioRequirements.ApprovedForLevel2 || !Model.RatioRequirements.ApprovedForLevel3 || !Model.RatioRequirements.ApprovedForUnqualified || !Model.RatioRequirements.ApprovedForLevel6)
                    {
                        if (!Model.RatioRequirements.ApprovedForLevel6)
                        {
                            await Html.RenderPartialAsync("Partials/RatioRow", new RatioRowModel
                                                                               {
                                                                                   LevelText = "Level 6",
                                                                                   IsAccepted = Model.RatioRequirements.ApprovedForLevel6
                                                                               });
                        }
                        
                        if (!Model.RatioRequirements.ApprovedForLevel3)
                        {
                            await Html.RenderPartialAsync("Partials/RatioRow", new RatioRowModel
                                                                               {
                                                                                   LevelText = "Level 3",
                                                                                   IsAccepted = Model.RatioRequirements.ApprovedForLevel3
                                                                               });
                        }
                        
                        if (!Model.RatioRequirements.ApprovedForLevel2)
                        {
                            await Html.RenderPartialAsync("Partials/RatioRow", new RatioRowModel
                                                                               {
                                                                                   LevelText = "Level 2",
                                                                                   IsAccepted = Model.RatioRequirements.ApprovedForLevel2
                                                                               });
                        }
                        
                        if (!Model.RatioRequirements.ApprovedForUnqualified)
                        {
                            await Html.RenderPartialAsync("Partials/RatioRow", new RatioRowModel
                                                                               {
                                                                                   LevelText = "Unqualified",
                                                                                   IsAccepted = Model.RatioRequirements.ApprovedForUnqualified
                                                                               });
                        }
                    }
                }
            </tbody>
        </table>
        <h1 class="govuk-heading-l govuk-!-static-margin-top-9">@Model.Content!.RequirementsHeading</h1>
        @Html.Raw(@Model.Content!.RequirementsText)
    </div>
</div>