@model Dfe.EarlyYearsQualification.Web.Models.Content.QuestionModels.DateQuestionModel

@{
    ViewData["Title"] = Model.Question;
}

@section BeforeMainContent {
    @{
        await Html.RenderPartialAsync("Partials/BackButton", Model.BackButton);
    }
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        @if (Model.HasErrors)
        {
            await Html.RenderPartialAsync("Partials/ErrorSummary", new ErrorSummaryModel
                                                                   {
                                                                       ErrorBannerHeading = Model.ErrorBannerHeading,
                                                                       ErrorBannerLinkText = Model.ErrorBannerLinkText,
                                                                       ElementLinkId = "date-started-month"
                                                                   });
        }
        @using (Html.BeginForm(Model.ActionName, Model.ControllerName, FormMethod.Post, new { id = "date-question-form"}))
        {
            <div class="govuk-form-group @(Model.HasErrors ? "govuk-form-group--error" : "")">
                <fieldset class="govuk-fieldset govuk-!-margin-bottom-4">
                    <legend class="govuk-fieldset__legend govuk-fieldset__legend--xl">
                        <h1 class="govuk-fieldset__heading mb-1" id="question">
                            @Model.Question
                        </h1>
                    </legend>

                    @if (!string.IsNullOrEmpty(Model.AdditionalInformationHeader) && !string.IsNullOrEmpty(Model.AdditionalInformationBody))
                    {
                        await Html.RenderPartialAsync("Partials/AdditionalInformation", new AdditionalInformationModel
                                                                                        {
                                                                                            AdditionalInformationHeader = Model.AdditionalInformationHeader,
                                                                                            AdditionalInformationBody = Model.AdditionalInformationBody
                                                                                        });
                    }

                    <div id="date-format-hint" class="govuk-hint">@Model.QuestionHint</div>

                    @if (Model.HasErrors)
                    {
                        <p id="date-error" class="govuk-error-message">
                            <span class="govuk-visually-hidden">Error:</span> @Model.ErrorMessage
                        </p>
                    }

                    <div class="govuk-date-input" id="date-started">
                        <div class="govuk-date-input__item">
                            <div class="govuk-form-group">
                                <label class="govuk-label govuk-date-input__label" for="date-started-month">@Model.MonthLabel</label>
                                @Html.TextBoxFor(x => x.SelectedMonth, "{0:#.#}", new { id = "date-started-month", @class = Model.HasErrors ? "govuk-input govuk-date-input__input govuk-input--width-2 govuk-input--error" : "govuk-input govuk-date-input__input govuk-input--width-2", maxlength = "2", name = "date-started-month", type = "text", inputmode = "numeric", Value = "" })
                            </div>
                        </div>
                        <div class="govuk-date-input__item">
                            <div class="govuk-form-group">
                                <label class="govuk-label govuk-date-input__label" for="date-started-year">@Model.YearLabel</label>
                                @Html.TextBoxFor(x => x.SelectedYear, "{0:#.#}", new { id = "date-started-year", @class = Model.HasErrors ? "govuk-input govuk-date-input__input govuk-input--width-4 govuk-input--error" : "govuk-input govuk-date-input__input govuk-input--width-4", maxlength = "4", name = "date-started-month", type = "text", inputmode = "numeric", Value = "" })
                            </div>
                        </div>
                    </div>
                </fieldset>
            </div>


            <div class="govuk-form-group">
                <button id="question-submit" type="submit" class="govuk-button" data-module="govuk-button">
                    @Model.CtaButtonText
                </button>
            </div>
        }
    </div>
</div>