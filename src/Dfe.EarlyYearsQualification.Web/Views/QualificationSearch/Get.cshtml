@model Dfe.EarlyYearsQualification.Web.Models.Content.QualificationListModel;

@{
    ViewData["Title"] = "Qualifications";
}

@section BeforeMainContent {
    @{
        await Html.RenderPartialAsync("Partials/BackButton", Model.BackButton);
    }
}

@section Scripts
{
    <script src="~/js/pages/search-results-page.js" asp-append-version="true"></script>
}

@Html.HiddenFor(x => x.Qualifications.Count, new { id="hdnQualificationCount" })

<div class="govuk-grid-row">
    <div class="govuk-grid-column-three-quarters">
        <div class="govuk-grid-row">
            <div class="govuk-grid-column-full">
                <h1 id="heading" class="govuk-heading-xl mb-8">@Model.Header</h1>
            </div>
        </div>
        <div class="govuk-grid-row">
            <div class="govuk-grid-column-full">
                <p id="your-search-header" class="govuk-body">
                    @Model.SearchCriteriaHeading
                </p>
                <ul class="govuk-list govuk-list--bullet govuk-!-static-margin-bottom-8">
                    <li id="filter-country">@Model.Filters.Country</li>
                    <li id="filter-start-date">@Model.Filters.StartDate</li>
                    <li id="filter-awarded-date">@Model.Filters.AwardedDate</li>
                    <li id="filter-level">@Model.Filters.Level</li>
                    <li id="filter-org">@Model.Filters.AwardingOrganisation</li>
                </ul>
            </div>
        </div>
        <div class="govuk-grid-row">
            <div class="govuk-grid-column-full">
                <h2 id="found-heading" class="govuk-heading-m govuk-!-static-margin-bottom-8">
                        @(Model.QualificationFoundPrefixText + " " + Model.Qualifications.Count + " " + (Model.Qualifications.Count == 1 ? Model.SingleQualificationFoundText : Model.MultipleQualificationsFoundText))
                </h2>
            </div>
        </div>
        <div class="govuk-grid-row">
            <div class="govuk-grid-column-full">
                <div id="pre-search-content">@Html.Raw(Model.PreSearchBoxContent)</div>
            </div>
        </div>
        <div class="govuk-grid-row">
            <div class="govuk-grid-column-full">
                @using (Html.BeginForm("Refine", "QualificationSearch", FormMethod.Post, new { id = "refine-search-form" }))
                {
                    <input class="govuk-input" style="width: 75%" id="refineSearch" name="refineSearch"
                           aria-labelledby="pre-search-content" type="text" value="@Model.SearchCriteria">
                    <button id="refineSearchButton" type="submit"
                            class="govuk-button govuk-button--secondary govuk-!-static-margin-left-1"
                            data-module="govuk-button">
                        @Model.SearchButtonText
                    </button>
                }
                @using (Html.BeginForm("Refine", "QualificationSearch", FormMethod.Post, new { id = "clear-search-form" }))
                {
                    <input name="refineSearch" type="hidden" value="">
                    <button id="clear-search" type="submit"
                            class="govuk-link button-as-link float-left govuk-!-static-margin-top-1 govuk-!-font-size-19">@Model.ClearSearchText</button>
                }
            </div>
        </div>

        @if (Model.Qualifications.Count == 0)
        {
            <div class="govuk-grid-row">
                <div class="govuk-grid-column-full">
                    <div id="no-result-content">
                        @Html.Raw(Model.NoResultText)
                        <hr class="govuk-section-break govuk-section-break--xl govuk-section-break--visible"/>
                    </div>
                </div>
            </div>
        }

        @foreach (var qualification in Model.Qualifications)
        {
            var linkDisplayType = qualification.IsQualificationNameDuplicate ? "inline-block" : "block";

            <div class="govuk-grid-row">
                <div class="govuk-grid-column-full">
                    <div class="chevron-card__wrapper">
                        <div class="chevron-card-link__wrapper">
                            <a href="@Url.Action("Index", "ConfirmQualification", new { qualificationId = qualification.QualificationId })"
                               class="govuk-link govuk-heading-m chevron-card__link"
                               style="display: @linkDisplayType;">
                                @qualification.QualificationName
                            </a>
                            
                            @if (qualification.IsQualificationNameDuplicate)
                            {
                                if (string.IsNullOrEmpty(qualification.QualificationNumber))
                                {
                                    <span id="ao-text-@qualification.QualificationId" class="govuk-body mb-0">(@qualification.AwardingOrganisationTitle)</span>
                                }
                                else
                                {
                                    <div id="ao-text-@qualification.QualificationId" class="govuk-body mb-0">@Model.QualificationNumberLabel @qualification.QualificationNumber</div>
                                }
                            }
                        </div>
                        <hr class="govuk-section-break govuk-section-break--m govuk-section-break--visible">
                    </div>
                </div>
            </div>
        }
        <div class="govuk-grid-row">
            <div class="govuk-grid-column-full">
                <div id="post-list-content" class="govuk-!-static-margin-top-4">
                    @Html.Raw(Model.PostQualificationListContent)
                </div>
            </div>
        </div>
    </div>
</div>