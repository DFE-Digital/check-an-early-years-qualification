@using Dfe.EarlyYearsQualification.Web.Models.Content.HelpViewModels
@using Dfe.EarlyYearsQualification.Web.Models.Content.QuestionModels
@model QualificationDetailsPageViewModel

@{
    ViewData["Title"] = Model.Heading;
}

@{
    var monthClass = "govuk-input govuk-date-input__input govuk-input--width-2";
    var monthErrorClass = monthClass + " govuk-input--error";

    var yearClass = "govuk-input govuk-date-input__input govuk-input--width-4";
    var yearErrorClass = yearClass + " govuk-input--error";
}

@section BeforeMainContent {
    @{
        await Html.RenderPartialAsync("Partials/BackButton", Model.BackButton);
    }
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-full govuk-grid-column-two-thirds-from-desktop">
        @if (Model.HasValidationErrors)
        {
            await Html.RenderPartialAsync("Partials/ErrorSummary", Model.ErrorSummaryModel);
        }

        <h1 class="govuk-heading-xl" id="help-page-heading">@Model.Heading</h1>
        <div class="govuk-body govuk-!-margin-bottom-7" id="post-heading-content">
            @Html.Raw(Model.PostHeadingContent)
        </div>

        @using (Html.BeginForm("qualification-details", "help", FormMethod.Post, new { id = "qualification-details-form" }))
        {
            <div class="govuk-form-group govuk-!-margin-bottom-6  @(Model.HasQualificationNameError ? "govuk-form-group--error" : "")">
                <h2 class="govuk-label-wrapper govuk-!-margin-bottom-3" id="qualification-name-heading">
                    <label class="govuk-label govuk-label--m" for="QualificationName">
                        @Model.QualificationNameHeading
                    </label>
                </h2>
                @if (Model.HasQualificationNameError)
                {
                    <p id="qualification-name-error" class="govuk-error-message">
                        <span class="govuk-visually-hidden">
                            Error:
                        </span>@Model.QualificationNameErrorMessage
                    </p>
                }
                @Html.TextBoxFor(x => x.QualificationName, new { @class = "govuk-input" })
            </div>

            @if (Model.QuestionModel.StartedQuestion is not null)
            {
                await Html.RenderPartialAsync("Partials/Date", Model.QuestionModel.StartedQuestion);
            }

            @if (Model.QuestionModel.AwardedQuestion is not null)
            {
                await Html.RenderPartialAsync("Partials/Date", Model.QuestionModel.AwardedQuestion);
            }

            <div class="govuk-form-group govuk-!-margin-bottom-6 @(Model.HasAwardingOrganisationError ? "govuk-form-group--error" : "")">
                <h2 class="govuk-label-wrapper govuk-!-margin-bottom-3" id="awarding-organisation-heading">
                    <label class="govuk-label govuk-label--m" for="AwardingOrganisation">
                        @Model.AwardingOrganisationHeading
                    </label>
                </h2>
                @if (Model.HasAwardingOrganisationError)
                {
                    <p id="qualification-name-error" class="govuk-error-message">
                        <span class="govuk-visually-hidden">
                            Error:
                        </span>@Model.AwardingOrganisationErrorMessage
                    </p>
                }
                @Html.TextBoxFor(x => x.AwardingOrganisation, new { @class = "govuk-input" })
            </div>

            <div class="govuk-form-group">
                <button id="question-submit" type="submit" class="govuk-button" data-module="govuk-button">
                    @Model.CtaButtonText
                </button>
            </div>
        }
    </div>
</div>