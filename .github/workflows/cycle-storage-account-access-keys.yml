# run-name: 'Cycle Storage Account Access Keys - ${{inputs.environment}}'
run-name: 'Cycle Storage Account Access Keys - development'
name: Cycle Storage Account Access Keys

on:
#  workflow_dispatch:
#    inputs:
#      environment:
#        description: 'Azure environment'
#        required: true
#        default: 'development'
#        type: choice
#        options:
#          - development
##          - staging
##          - production
  pull_request:

env:
    SECRET_NAME: 'Storage--ConnectionString'

jobs:

  cycle-access-keys:
    name: Update access keys for development
    #name: Update access keys for ${{inputs.environment}}
    runs-on: ubuntu-22.04
    environment: development
    #environment: ${{ inputs.environment }}
    # Permissions for OIDC authentication
    permissions:
      id-token: write
      contents: write
      issues: write
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      # Login to Azure using OIDC
      - name: Login to Azure CLI
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      
      # Get the secondary connection, update KV and restart web app
      - name: Get the secondary connection string and update KeyVault secret
        run: |
          connectionString=$(az storage account show-connection-string --name ${{ vars.WEBAPP_STORAGE_ACCOUNT_NAME }} --resource-group ${{ vars.RESOURCE_NAME_PREFIX }}-rg --key secondary)
          az keyvault secret set --name ${{ env.SECRET_NAME }} --vault-name ${{ vars.RESOURCE_NAME_PREFIX }}-kv --value $connectionString
          az webapp restart --resource-group ${{ vars.RESOURCE_NAME_PREFIX }}-rg --name ${{ vars.WEBAPP_NAME }}
          
      # Update the primary access key, update KV and restart
      - name: Update the primary access key and update KeyVault secret
        run: |
          az storage account keys renew --name ${{ vars.WEBAPP_STORAGE_ACCOUNT_NAME }} --resource-group ${{ vars.RESOURCE_NAME_PREFIX }}-rg --key primary
          connectionString=$(az storage account show-connection-string --name ${{ vars.WEBAPP_STORAGE_ACCOUNT_NAME }} --resource-group ${{ vars.RESOURCE_NAME_PREFIX }}-rg --key primary)
          az keyvault secret set --name ${{ env.SECRET_NAME }} --vault-name ${{ vars.RESOURCE_NAME_PREFIX }}-kv --value $connectionString
          az webapp restart --resource-group ${{ vars.RESOURCE_NAME_PREFIX }}-rg --name ${{ vars.WEBAPP_NAME }}

      # Update the secondary access key
      - name: Update the secondary access key
        run: |
          az storage account keys renew --name ${{ vars.WEBAPP_STORAGE_ACCOUNT_NAME }} --resource-group ${{ vars.RESOURCE_NAME_PREFIX }}-rg --key secondary